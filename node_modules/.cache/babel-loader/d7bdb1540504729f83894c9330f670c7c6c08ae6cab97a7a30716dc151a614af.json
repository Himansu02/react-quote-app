{"ast":null,"code":"var _jsxFileName = \"C:\\\\himansu(files and assignments)\\\\React Realted\\\\react ROUTER practice\\\\react-quotes-app\\\\src\\\\pages\\\\AllQuotes.js\",\n  _s = $RefreshSig$();\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { Fragment, useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllQuotes = () => {\n  _s();\n  // const {\n  //   sendRequest,\n  //   status,\n  //   data: loadedData,\n  //   error,\n  // } = useHttp(getAllQuotes, true);\n\n  // useEffect(() => {\n  //   sendRequest();\n  // }, [sendRequest]);\n\n  // if (status === \"pending\") {\n  //   return (\n  //     <div className=\"centered\">\n  //       <LoadingSpinner></LoadingSpinner>\n  //     </div>\n  //   );\n  // }\n\n  // if (error) {\n  //   return <p className=\"centered focused\">{error}</p>;\n  // }\n\n  // if (status === \"completed\" && (!loadedData || loadedData.length === 0)) {\n  //   return <NoQuotesFound></NoQuotesFound>;\n  // }\n\n  const loadedData = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: loadedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AllQuotes, \"xDP+ZzSIv+pW98t+OiwNzvwSO0Y=\", false, function () {\n  return [useLoaderData];\n});\n_c = AllQuotes;\nexport default AllQuotes;\nexport const loader = () => {\n  return getAllQuotes();\n};\nvar _c;\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["QuoteList","useHttp","getAllQuotes","Fragment","useEffect","LoadingSpinner","NoQuotesFound","useLoaderData","AllQuotes","loadedData","loader"],"sources":["C:/himansu(files and assignments)/React Realted/react ROUTER practice/react-quotes-app/src/pages/AllQuotes.js"],"sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\n\r\nconst AllQuotes = () => {\r\n  // const {\r\n  //   sendRequest,\r\n  //   status,\r\n  //   data: loadedData,\r\n  //   error,\r\n  // } = useHttp(getAllQuotes, true);\r\n\r\n  // useEffect(() => {\r\n  //   sendRequest();\r\n  // }, [sendRequest]);\r\n\r\n  // if (status === \"pending\") {\r\n  //   return (\r\n  //     <div className=\"centered\">\r\n  //       <LoadingSpinner></LoadingSpinner>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  // if (error) {\r\n  //   return <p className=\"centered focused\">{error}</p>;\r\n  // }\r\n\r\n  // if (status === \"completed\" && (!loadedData || loadedData.length === 0)) {\r\n  //   return <NoQuotesFound></NoQuotesFound>;\r\n  // }\r\n\r\n  const loadedData=useLoaderData();\r\n\r\n  return (\r\n    <Fragment>\r\n      <QuoteList quotes={loadedData}></QuoteList>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n\r\nexport const loader=()=>{\r\n  return getAllQuotes();\r\n}\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,gCAAgC;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,YAAY,QAAQ,YAAY;AACzC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,SAASC,aAAa,QAAQ,kBAAkB;AAAC;AAGjD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMC,UAAU,GAACF,aAAa,EAAE;EAEhC,oBACE,QAAC,QAAQ;IAAA,uBACP,QAAC,SAAS;MAAC,MAAM,EAAEE;IAAW;MAAA;MAAA;MAAA;IAAA;EAAa;IAAA;IAAA;IAAA;EAAA,QAClC;AAEf,CAAC;AAAC,GAnCID,SAAS;EAAA,QA4BID,aAAa;AAAA;AAAA,KA5B1BC,SAAS;AAqCf,eAAeA,SAAS;AAExB,OAAO,MAAME,MAAM,GAAC,MAAI;EACtB,OAAOR,YAAY,EAAE;AACvB,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}