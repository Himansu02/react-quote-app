{"ast":null,"code":"var _jsxFileName = \"C:\\\\himansu(files and assignments)\\\\React Realted\\\\react ROUTER practice\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = props => {\n  _s();\n  const history = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortAscending = queryParams.get('sort') === 'asc';\n  const sortingHandler = () => {\n    history.push(location.pathname + '?sort=' + (isSortAscending ? 'dec' : 'asc'));\n  };\n  const sortedQuotes = sortQuotes(props.quotes, isSortAscending);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sortingHandler,\n        children: [\"Sort \", isSortAscending ? \"Descending\" : \"Ascending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteList, \"or5bqKy2MB4cZfeg+8SrDwtYsN8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useNavigate","useLocation","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortAscending","get","sortingHandler","push","pathname","sortedQuotes","sorting","list","map","quote","author","text"],"sources":["C:/himansu(files and assignments)/React Realted/react ROUTER practice/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from 'react';\nimport { useNavigate,useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history=useNavigate();\n  const location=useLocation();\n\n  const queryParams=new URLSearchParams(location.search)\n\n  const isSortAscending=queryParams.get('sort') === 'asc';\n  const sortingHandler=()=>{\n    history.push(location.pathname+'?sort='+(isSortAscending?'dec':'asc'))\n  }\n\n  const sortedQuotes=sortQuotes(props.quotes,isSortAscending);\n\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortingHandler}>Sort {isSortAscending?\"Descending\" : \"Ascending\"}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAACC,WAAW,QAAQ,kBAAkB;AAC1D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,wBAAwB;AAAC;AAG7C,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,SAAS,KAAK;EACxC,OAAOD,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,EAAEC,MAAM,KAAK;IACrC,IAAIH,SAAS,EAAE;MACb,OAAOE,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC,MAAM;MACL,OAAOF,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAMC,OAAO,GAACb,WAAW,EAAE;EAC3B,MAAMc,QAAQ,GAACb,WAAW,EAAE;EAE5B,MAAMc,WAAW,GAAC,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EAEtD,MAAMC,eAAe,GAACH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK;EACvD,MAAMC,cAAc,GAAC,MAAI;IACvBP,OAAO,CAACQ,IAAI,CAACP,QAAQ,CAACQ,QAAQ,GAAC,QAAQ,IAAEJ,eAAe,GAAC,KAAK,GAAC,KAAK,CAAC,CAAC;EACxE,CAAC;EAED,MAAMK,YAAY,GAACnB,UAAU,CAACQ,KAAK,CAACP,MAAM,EAACa,eAAe,CAAC;EAG3D,oBACE,QAAC,QAAQ;IAAA,wBACP;MAAK,SAAS,EAAEf,OAAO,CAACqB,OAAQ;MAAA,uBAC9B;QAAQ,OAAO,EAAEJ,cAAe;QAAA,oBAAOF,eAAe,GAAC,YAAY,GAAG,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QACvF,eACN;MAAI,SAAS,EAAEf,OAAO,CAACsB,IAAK;MAAA,UACzBF,YAAY,CAACG,GAAG,CAAEC,KAAK,iBACtB,QAAC,SAAS;QAER,EAAE,EAAEA,KAAK,CAACjB,EAAG;QACb,MAAM,EAAEiB,KAAK,CAACC,MAAO;QACrB,IAAI,EAAED,KAAK,CAACE;MAAK,GAHZF,KAAK,CAACjB,EAAE;QAAA;QAAA;QAAA;MAAA,QAKhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEf,CAAC;AAAC,GA/BIC,SAAS;EAAA,QACCX,WAAW,EACVC,WAAW;AAAA;AAAA,KAFtBU,SAAS;AAiCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}