{"ast":null,"code":"var _jsxFileName = \"C:\\\\himansu(files and assignments)\\\\React Realted\\\\react ROUTER practice\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\nimport { Form, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewCommentForm = props => {\n  _s();\n  const commentTextRef = useRef();\n  // const { sendRequest, status, error } = useHttp(addComment);\n\n  // const { onAddComment } = props;\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n\n  // useEffect(() => {\n  //   if (status === \"completed\" && !error) {\n  //     onAddComment();\n  //   }\n  // }, [status, error]);\n\n  // const submitFormHandler = (event) => {\n  //   event.preventDefault();\n\n  //   const enteredComment = commentTextRef.current.value;\n\n  //   sendRequest({ commentData: {text:enteredComment}, quoteId: quoteId });\n  //   commentTextRef.current.value=\"\"\n\n  //   // optional: Could validate here\n\n  //   // send comment to server\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: classes.form,\n    method: \"post\",\n    action: `/quotes`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef,\n        name: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(NewCommentForm, \"pBxKw4S96Z5CG5Lq17sp+WDsKak=\", false, function () {\n  return [useParams];\n});\n_c = NewCommentForm;\nexport default NewCommentForm;\nvar _c;\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"names":["useRef","useEffect","useHttp","addComment","LoadingSpinner","classes","Form","useParams","NewCommentForm","props","commentTextRef","params","quoteId","form","control","actions"],"sources":["C:/himansu(files and assignments)/React Realted/react ROUTER practice/09-time-to-practice-starting-code/src/components/comments/NewCommentForm.js"],"sourcesContent":["import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\nimport { Form, useParams } from \"react-router-dom\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  // const { sendRequest, status, error } = useHttp(addComment);\n\n  // const { onAddComment } = props;\n  const params=useParams();\n  const { quoteId } = params;\n\n  // useEffect(() => {\n  //   if (status === \"completed\" && !error) {\n  //     onAddComment();\n  //   }\n  // }, [status, error]);\n\n  // const submitFormHandler = (event) => {\n  //   event.preventDefault();\n\n  //   const enteredComment = commentTextRef.current.value;\n\n  //   sendRequest({ commentData: {text:enteredComment}, quoteId: quoteId });\n  //   commentTextRef.current.value=\"\"\n\n  //   // optional: Could validate here\n\n  //   // send comment to server\n  // };\n\n  return (\n    <Form className={classes.form} method='post' action={`/quotes`} >\n      <div className={classes.control}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef} name='text'></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </Form>\n  );\n};\n\nexport default NewCommentForm;\n\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAAC;AAEnD,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAA;EAChC,MAAMC,cAAc,GAAGV,MAAM,EAAE;EAC/B;;EAEA;EACA,MAAMW,MAAM,GAACJ,SAAS,EAAE;EACxB,MAAM;IAAEK;EAAQ,CAAC,GAAGD,MAAM;;EAE1B;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEA;EACA;;EAEA;;EAEA;EACA;;EAEA,oBACE,QAAC,IAAI;IAAC,SAAS,EAAEN,OAAO,CAACQ,IAAK;IAAC,MAAM,EAAC,MAAM;IAAC,MAAM,EAAG,SAAS;IAAA,wBAC7D;MAAK,SAAS,EAAER,OAAO,CAACS,OAAQ;MAAA,wBAC9B;QAAO,OAAO,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eAC7C;QAAU,EAAE,EAAC,SAAS;QAAC,IAAI,EAAC,GAAG;QAAC,GAAG,EAAEJ,cAAe;QAAC,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QACxE,eACN;MAAK,SAAS,EAAEL,OAAO,CAACU,OAAQ;MAAA,uBAC9B;QAAQ,SAAS,EAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqB;MAAA;MAAA;MAAA;IAAA,QACxC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAtCIP,cAAc;EAAA,QAKLD,SAAS;AAAA;AAAA,KALlBC,cAAc;AAwCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}