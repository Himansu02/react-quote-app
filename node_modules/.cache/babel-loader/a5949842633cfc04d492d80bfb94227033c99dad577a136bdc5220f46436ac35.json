{"ast":null,"code":"var _jsxFileName = \"C:\\\\himansu(files and assignments)\\\\React Realted\\\\react ROUTER practice\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteForm.js\";\nimport { Fragment, useRef, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { Form } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteForm = _ref => {\n  let {\n    err,\n    submitting\n  } = _ref;\n  // const authorInputRef = useRef();\n  // const textInputRef = useRef();\n\n  // function submitFormHandler(event) {\n  //   event.preventDefault();\n\n  //   const enteredAuthor = authorInputRef.current.value;\n  //   const enteredText = textInputRef.current.value;\n\n  //   // optional: Could validate here\n\n  //   props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  // }\n  // console.log(err);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && error.status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: classes.form,\n        method: \"post\",\n        action: \"/new-quote\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            name: \"author\",\n            onFocus: () => {\n              setV(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            rows: \"5\",\n            name: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            disabled: submitting,\n            children: submitting ? \"submitting...\" : \"Add Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = QuoteForm;\nexport default QuoteForm;\nvar _c;\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"names":["Fragment","useRef","useState","Card","LoadingSpinner","classes","Form","QuoteForm","err","submitting","error","status","message","form","control","setV","actions"],"sources":["C:/himansu(files and assignments)/React Realted/react ROUTER practice/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js"],"sourcesContent":["import { Fragment, useRef, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { Form } from \"react-router-dom\";\n\nconst QuoteForm = ({ err, submitting }) => {\n  // const authorInputRef = useRef();\n  // const textInputRef = useRef();\n\n  // function submitFormHandler(event) {\n  //   event.preventDefault();\n\n  //   const enteredAuthor = authorInputRef.current.value;\n  //   const enteredText = textInputRef.current.value;\n\n  //   // optional: Could validate here\n\n  //   props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  // }\n  // console.log(err);\n\n  return (\n    <Fragment>\n      {error && error.status && <p className=\"centered\">{error.message}</p>}\n      <Card>\n        <Form\n          className={classes.form}\n          method=\"post\"\n          action=\"/new-quote\"\n        >\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input\n              type=\"text\"\n              id=\"author\"\n              name=\"author\"\n              onFocus={() => {\n                setV(false);\n              }}\n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" name=\"text\"></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\" disabled={submitting}>\n              {submitting ? \"submitting...\" : \"Add Quote\"}\n            </button>\n          </div>\n        </Form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAExC,MAAMC,SAAS,GAAG,QAAyB;EAAA,IAAxB;IAAEC,GAAG;IAAEC;EAAW,CAAC;EACpC;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA,oBACE,QAAC,QAAQ;IAAA,WACNC,KAAK,IAAIA,KAAK,CAACC,MAAM,iBAAI;MAAG,SAAS,EAAC,UAAU;MAAA,UAAED,KAAK,CAACE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eACrE,QAAC,IAAI;MAAA,uBACH,QAAC,IAAI;QACH,SAAS,EAAEP,OAAO,CAACQ,IAAK;QACxB,MAAM,EAAC,MAAM;QACb,MAAM,EAAC,YAAY;QAAA,wBAEnB;UAAK,SAAS,EAAER,OAAO,CAACS,OAAQ;UAAA,wBAC9B;YAAO,OAAO,EAAC,QAAQ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe,eACtC;YACE,IAAI,EAAC,MAAM;YACX,EAAE,EAAC,QAAQ;YACX,IAAI,EAAC,QAAQ;YACb,OAAO,EAAE,MAAM;cACbC,IAAI,CAAC,KAAK,CAAC;YACb;UAAE;YAAA;YAAA;YAAA;UAAA,QACF;QAAA;UAAA;UAAA;UAAA;QAAA,QACE,eACN;UAAK,SAAS,EAAEV,OAAO,CAACS,OAAQ;UAAA,wBAC9B;YAAO,OAAO,EAAC,MAAM;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa,eAClC;YAAU,EAAE,EAAC,MAAM;YAAC,IAAI,EAAC,GAAG;YAAC,IAAI,EAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAY;QAAA;UAAA;UAAA;UAAA;QAAA,QAChD,eACN;UAAK,SAAS,EAAET,OAAO,CAACW,OAAQ;UAAA,uBAC9B;YAAQ,SAAS,EAAC,KAAK;YAAC,QAAQ,EAAEP,UAAW;YAAA,UAC1CA,UAAU,GAAG,eAAe,GAAG;UAAW;YAAA;YAAA;YAAA;UAAA;QACpC;UAAA;UAAA;UAAA;QAAA,QACL;MAAA;QAAA;QAAA;QAAA;MAAA;IACD;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEf,CAAC;AAAC,KAjDIF,SAAS;AAmDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}