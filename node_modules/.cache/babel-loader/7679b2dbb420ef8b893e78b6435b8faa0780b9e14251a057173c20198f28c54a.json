{"ast":null,"code":"var _jsxFileName = \"C:\\\\himansu(files and assignments)\\\\React Realted\\\\react ROUTER practice\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useParams } from 'react-router-dom';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedComments,\n    error\n  } = useHttp(getAllComments, true);\n  const {\n    quoteId\n  } = params;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  let comments;\n  if (status === 'pending') {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this);\n  }\n  if (status === 'completed' && (loadedComments || loadedComments.length > 0)) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }, this);\n  }\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No Comments Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"/Nmlu3Mzm70yVzPC5go7UQG5D+s=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useCallback","useEffect","useState","useHttp","classes","NewCommentForm","useParams","getAllComments","LoadingSpinner","CommentsList","Comments","isAddingComment","setIsAddingComment","params","sendRequest","status","data","loadedComments","error","quoteId","startAddCommentHandler","addCommentHandler","comments","length"],"sources":["C:/himansu(files and assignments)/React Realted/react ROUTER practice/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useParams } from 'react-router-dom';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList'\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params=useParams();\n  const {sendRequest,status,data:loadedComments,error}=useHttp(getAllComments,true)\n\n  const {quoteId}=params;\n\n  useEffect(()=>{\n    sendRequest(quoteId)\n  },[sendRequest,quoteId])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addCommentHandler=useCallback(()=>{\n    sendRequest(quoteId)\n  },[sendRequest,quoteId]);\n\n  let comments;\n\n  if(status==='pending')\n  {\n    comments=<div className='centered'><LoadingSpinner></LoadingSpinner></div>\n  }\n\n  if(status==='completed'&&(loadedComments||loadedComments.length>0))\n  {\n    comments=<CommentsList comments={loadedComments}></CommentsList>\n  }\n\n  if(status==='completed'&&(!loadedComments || loadedComments.length===0))\n  {\n    comments = <p className='centered'>No Comments Found</p>\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddComment={addCommentHandler}/>}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n\n\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,YAAY,MAAM,gBAAgB;AAAA;AAEzC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMW,MAAM,GAACP,SAAS,EAAE;EACxB,MAAM;IAACQ,WAAW;IAACC,MAAM;IAACC,IAAI,EAACC,cAAc;IAACC;EAAK,CAAC,GAACf,OAAO,CAACI,cAAc,EAAC,IAAI,CAAC;EAEjF,MAAM;IAACY;EAAO,CAAC,GAACN,MAAM;EAEtBZ,SAAS,CAAC,MAAI;IACZa,WAAW,CAACK,OAAO,CAAC;EACtB,CAAC,EAAC,CAACL,WAAW,EAACK,OAAO,CAAC,CAAC;EAExB,MAAMC,sBAAsB,GAAG,MAAM;IACnCR,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMS,iBAAiB,GAACrB,WAAW,CAAC,MAAI;IACtCc,WAAW,CAACK,OAAO,CAAC;EACtB,CAAC,EAAC,CAACL,WAAW,EAACK,OAAO,CAAC,CAAC;EAExB,IAAIG,QAAQ;EAEZ,IAAGP,MAAM,KAAG,SAAS,EACrB;IACEO,QAAQ,gBAAC;MAAK,SAAS,EAAC,UAAU;MAAA,uBAAC,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAM;EAC5E;EAEA,IAAGP,MAAM,KAAG,WAAW,KAAGE,cAAc,IAAEA,cAAc,CAACM,MAAM,GAAC,CAAC,CAAC,EAClE;IACED,QAAQ,gBAAC,QAAC,YAAY;MAAC,QAAQ,EAAEL;IAAe;MAAA;MAAA;MAAA;IAAA,QAAgB;EAClE;EAEA,IAAGF,MAAM,KAAG,WAAW,KAAG,CAACE,cAAc,IAAIA,cAAc,CAACM,MAAM,KAAG,CAAC,CAAC,EACvE;IACED,QAAQ,gBAAG;MAAG,SAAS,EAAC,UAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB;EAC1D;EAEA,oBACE;IAAS,SAAS,EAAElB,OAAO,CAACkB,QAAS;IAAA,wBACnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACX,eAAe,iBACf;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAES,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzD,EACAT,eAAe,iBAAI,QAAC,cAAc;MAAC,OAAO,EAAEQ,OAAQ;MAAC,YAAY,EAAEE;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAE,EACvFC,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEd,CAAC;AAAC,GAhDIZ,QAAQ;EAAA,QAECJ,SAAS,EAC+BH,OAAO;AAAA;AAAA,KAHxDO,QAAQ;AAkDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}