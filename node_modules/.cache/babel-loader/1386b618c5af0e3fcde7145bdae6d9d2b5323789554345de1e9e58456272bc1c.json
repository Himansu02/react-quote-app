{"ast":null,"code":"var _jsxFileName = \"C:\\\\himansu(files and assignments)\\\\React Realted\\\\react ROUTER practice\\\\09-time-to-practice-starting-code\\\\src\\\\pages\\\\NewQuote.js\",\n  _s = $RefreshSig$();\nimport { Navigate, redirect, useActionData, useNavigate, useNavigation } from \"react-router-dom\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewQuote = () => {\n  _s();\n  // const Navigate=useNavigate();\n  const error = useActionData();\n  const navigation = useNavigation();\n  //   const [error,setError]=useState(data);\n\n  // const {sendRequest,status}=useHttp(addQuote);\n\n  // useEffect(()=>{\n  //     if(status==='completed')\n  //     {\n  //         Navigate('/quotes')\n  //     }\n  // },[status])\n\n  //   const errorHandler=()=>{\n  //     setError({status:'',message:''})\n  //   }\n\n  // const onAddHandler=(quoteData)=>{\n  //     sendRequest(quoteData);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && error.status && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(QuoteForm, {\n      submitting: navigation.state === 'submitting'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(NewQuote, \"xvnptVqe/pRRd9U4H/2TmD/rE1g=\", false, function () {\n  return [useActionData, useNavigation];\n});\n_c = NewQuote;\nexport default NewQuote;\nexport const action = async _ref => {\n  let {\n    request\n  } = _ref;\n  const formData = await request.formData();\n  const post = {\n    author: formData.get(\"author\"),\n    text: formData.get(\"text\")\n  };\n  try {\n    await addQuote(post);\n  } catch (err) {\n    if (err.status === 422) {\n      return err;\n    }\n    throw err;\n  }\n  return redirect(\"/quotes\");\n};\nvar _c;\n$RefreshReg$(_c, \"NewQuote\");","map":{"version":3,"names":["Navigate","redirect","useActionData","useNavigate","useNavigation","QuoteForm","useHttp","addQuote","Fragment","useEffect","useState","NewQuote","error","navigation","status","message","state","action","request","formData","post","author","get","text","err"],"sources":["C:/himansu(files and assignments)/React Realted/react ROUTER practice/09-time-to-practice-starting-code/src/pages/NewQuote.js"],"sourcesContent":["import {\r\n  Navigate,\r\n  redirect,\r\n  useActionData,\r\n  useNavigate,\r\n  useNavigation,\r\n} from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\nimport { Fragment, useEffect,useState } from \"react\";\r\n\r\nconst NewQuote = () => {\r\n  // const Navigate=useNavigate();\r\n  const error = useActionData();\r\n  const navigation =  useNavigation()\r\n//   const [error,setError]=useState(data);\r\n\r\n  // const {sendRequest,status}=useHttp(addQuote);\r\n\r\n  // useEffect(()=>{\r\n  //     if(status==='completed')\r\n  //     {\r\n  //         Navigate('/quotes')\r\n  //     }\r\n  // },[status])\r\n\r\n//   const errorHandler=()=>{\r\n//     setError({status:'',message:''})\r\n//   }\r\n\r\n  // const onAddHandler=(quoteData)=>{\r\n  //     sendRequest(quoteData);\r\n  // }\r\n\r\n  return (\r\n    <Fragment>\r\n      {error && error.status && <p className=\"centered\">{error.message}</p>}\r\n      <QuoteForm  submitting={navigation.state === 'submitting'}></QuoteForm>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n\r\nexport const action = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  const post = {\r\n    author: formData.get(\"author\"),\r\n    text: formData.get(\"text\"),\r\n  };\r\n  try {\r\n    await addQuote(post);\r\n  } catch (err) {\r\n    if(err.status === 422)\r\n    {\r\n        return err\r\n    }\r\n    throw err;\r\n  }\r\n\r\n  return redirect(\"/quotes\");\r\n};\r\n"],"mappings":";;AAAA,SACEA,QAAQ,EACRC,QAAQ,EACRC,aAAa,EACbC,WAAW,EACXC,aAAa,QACR,kBAAkB;AACzB,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,QAAQ,EAAEC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAAC;AAErD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB;EACA,MAAMC,KAAK,GAAGV,aAAa,EAAE;EAC7B,MAAMW,UAAU,GAAIT,aAAa,EAAE;EACrC;;EAEE;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEF;EACA;EACA;;EAEE;EACA;EACA;;EAEA,oBACE,QAAC,QAAQ;IAAA,WACNQ,KAAK,IAAIA,KAAK,CAACE,MAAM,iBAAI;MAAG,SAAS,EAAC,UAAU;MAAA,UAAEF,KAAK,CAACG;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eACrE,QAAC,SAAS;MAAE,UAAU,EAAEF,UAAU,CAACG,KAAK,KAAK;IAAa;MAAA;MAAA;MAAA;IAAA,QAAa;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9D;AAEf,CAAC;AAAC,GA7BIL,QAAQ;EAAA,QAEET,aAAa,EACPE,aAAa;AAAA;AAAA,KAH7BO,QAAQ;AA+Bd,eAAeA,QAAQ;AAEvB,OAAO,MAAMM,MAAM,GAAG,cAAuB;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACtC,MAAMC,QAAQ,GAAG,MAAMD,OAAO,CAACC,QAAQ,EAAE;EACzC,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAEF,QAAQ,CAACG,GAAG,CAAC,QAAQ,CAAC;IAC9BC,IAAI,EAAEJ,QAAQ,CAACG,GAAG,CAAC,MAAM;EAC3B,CAAC;EACD,IAAI;IACF,MAAMf,QAAQ,CAACa,IAAI,CAAC;EACtB,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZ,IAAGA,GAAG,CAACV,MAAM,KAAK,GAAG,EACrB;MACI,OAAOU,GAAG;IACd;IACA,MAAMA,GAAG;EACX;EAEA,OAAOvB,QAAQ,CAAC,SAAS,CAAC;AAC5B,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}